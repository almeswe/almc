assert(tokens[0]->type == TOKEN_PLUS);
assert(tokens[1]->type == TOKEN_DASH);
assert(tokens[2]->type == TOKEN_ASTERISK);
assert(tokens[3]->type == TOKEN_SLASH);
assert(tokens[4]->type == TOKEN_MODULUS);
assert(tokens[5]->type == TOKEN_BAR);
assert(tokens[6]->type == TOKEN_TILDE);
assert(tokens[7]->type == TOKEN_CARET);
assert(tokens[8]->type == TOKEN_EXCL_MARK);
assert(tokens[9]->type == TOKEN_COMMA);
assert(tokens[10]->type == TOKEN_DOT);
assert(tokens[11]->type == TOKEN_COLON);
assert(tokens[12]->type == TOKEN_SEMICOLON);
assert(tokens[13]->type == TOKEN_ASSIGN);
assert(tokens[14]->type == TOKEN_QUESTION);
assert(tokens[15]->type == TOKEN_AMPERSAND);
assert(tokens[16]->type == TOKEN_CL_PAREN);
assert(tokens[17]->type == TOKEN_OP_PAREN);
assert(tokens[18]->type == TOKEN_CL_BRACKET);
assert(tokens[19]->type == TOKEN_OP_BRACKET);
assert(tokens[20]->type == TOKEN_CL_BRACE);
assert(tokens[21]->type == TOKEN_OP_BRACE);
assert(tokens[22]->type == TOKEN_LEFT_ANGLE);
assert(tokens[23]->type == TOKEN_RIGHT_ANGLE);
assert(tokens[24]->type == TOKEN_ADD_ASSIGN);
assert(tokens[25]->type == TOKEN_SUB_ASSIGN);
assert(tokens[26]->type == TOKEN_MUL_ASSIGN);
assert(tokens[27]->type == TOKEN_DIV_ASSIGN);
assert(tokens[28]->type == TOKEN_MOD_ASSIGN);
assert(tokens[29]->type == TOKEN_LSHIFT_ASSIGN);
assert(tokens[30]->type == TOKEN_RSHIFT_ASSIGN);
assert(tokens[31]->type == TOKEN_BW_OR_ASSIGN);
assert(tokens[32]->type == TOKEN_BW_AND_ASSIGN);
assert(tokens[33]->type == TOKEN_BW_XOR_ASSIGN);
assert(tokens[34]->type == TOKEN_BW_NOT_ASSIGN);
assert(tokens[35]->type == TOKEN_LG_OR);
assert(tokens[36]->type == TOKEN_LG_EQ);
assert(tokens[37]->type == TOKEN_LG_NEQ);
assert(tokens[38]->type == TOKEN_LG_AND);
assert(tokens[39]->type == TOKEN_LSHIFT);
assert(tokens[40]->type == TOKEN_RSHIFT);
assert(tokens[41]->type == TOKEN_LESS_EQ_THAN);
assert(tokens[42]->type == TOKEN_GREATER_EQ_THAN);
assert(tokens[43]->type == TOKEN_INC);
assert(tokens[44]->type == TOKEN_DEC);
assert(tokens[45]->type == TOKEN_ARROW);
assert(tokens[46]->type == TOKEN_DOUBLE_DOT);
assert(tokens[47]->type == TOKEN_TRIPLE_DOT);
assert(tokens[48]->type == TOKEN_NAV_CURR_DIR);
assert(tokens[49]->type == TOKEN_NAV_PREV_DIR);
assert(tokens[50]->type == TOKEN_KEYWORD_AUTO);
assert(tokens[51]->type == TOKEN_KEYWORD_BREAK);
assert(tokens[52]->type == TOKEN_KEYWORD_CASE);
assert(tokens[53]->type == TOKEN_KEYWORD_CHAR);
assert(tokens[54]->type == TOKEN_KEYWORD_CONST);
assert(tokens[55]->type == TOKEN_KEYWORD_CONTINUE);
assert(tokens[56]->type == TOKEN_KEYWORD_DEFAULT);
assert(tokens[57]->type == TOKEN_KEYWORD_ENUM);
assert(tokens[58]->type == TOKEN_KEYWORD_ELIF);
assert(tokens[59]->type == TOKEN_KEYWORD_ENTRY);
assert(tokens[60]->type == TOKEN_KEYWORD_EXTERN);
assert(tokens[61]->type == TOKEN_KEYWORD_FOR);
assert(tokens[62]->type == TOKEN_KEYWORD_FUNC);
assert(tokens[63]->type == TOKEN_KEYWORD_FROM);
assert(tokens[64]->type == TOKEN_KEYWORD_FALSE);
assert(tokens[65]->type == TOKEN_KEYWORD_FLOAT32);
assert(tokens[66]->type == TOKEN_KEYWORD_FLOAT64);
assert(tokens[67]->type == TOKEN_KEYWORD_FORWARD);
assert(tokens[68]->type == TOKEN_KEYWORD_GOTO);
assert(tokens[69]->type == TOKEN_KEYWORD_IF);
assert(tokens[70]->type == TOKEN_KEYWORD_INT8);
assert(tokens[71]->type == TOKEN_KEYWORD_INT16);
assert(tokens[72]->type == TOKEN_KEYWORD_INT32);
assert(tokens[73]->type == TOKEN_KEYWORD_INT64);
assert(tokens[74]->type == TOKEN_KEYWORD_IMPORT);
assert(tokens[75]->type == TOKEN_KEYWORD_INTRINSIC);
assert(tokens[76]->type == TOKEN_KEYWORD_REGISTER);
assert(tokens[77]->type == TOKEN_KEYWORD_RETURN);
assert(tokens[78]->type == TOKEN_KEYWORD_STRING);
assert(tokens[79]->type == TOKEN_KEYWORD_STATIC);
assert(tokens[80]->type == TOKEN_KEYWORD_STRUCT);
assert(tokens[81]->type == TOKEN_KEYWORD_SWITCH);
assert(tokens[82]->type == TOKEN_KEYWORD_SIZEOF);
assert(tokens[83]->type == TOKEN_KEYWORD_TRUE);
assert(tokens[84]->type == TOKEN_KEYWORD_TYPEOF);
assert(tokens[85]->type == TOKEN_KEYWORD_UNION);
assert(tokens[86]->type == TOKEN_KEYWORD_UINT8);
assert(tokens[87]->type == TOKEN_KEYWORD_UINT16);
assert(tokens[88]->type == TOKEN_KEYWORD_UINT32);
assert(tokens[89]->type == TOKEN_KEYWORD_UINT64);
assert(tokens[90]->type == TOKEN_KEYWORD_LET);
assert(tokens[91]->type == TOKEN_KEYWORD_LABEL);
assert(tokens[92]->type == TOKEN_KEYWORD_VOID);
assert(tokens[93]->type == TOKEN_KEYWORD_VOLATILE);
assert(tokens[94]->type == TOKEN_KEYWORD_WHILE);
assert(tokens[95]->type == TOKEN_KEYWORD_DO);
assert(tokens[96]->type == TOKEN_KEYWORD_ELSE);
