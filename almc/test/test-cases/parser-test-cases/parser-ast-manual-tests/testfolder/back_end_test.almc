fnc cdecl from("msvcrt") 
	printf(fmt: char*, ...) : void;

fnc cdecl from("msvcrt")
	scanf(fmt: char*, ...) : void;

fnc cdecl from("msvcrt")
	malloc(_s: u32) : u8*;

fnc cdecl from("msvcrt")
	atoi(_s: char*) : i32;

fnc negate(a: i32) : i32 {
	return -a;
}

fnc square(a: i32) : i32 {
	let mult: i32 = a * a;
	return mult;
}

fnc toi32(string: char*) : i32 {
	return atoi(string);
}

fnc entry main1() : void {
	#let b: u8* = malloc(sizeof(i64));
	#let a: i32 = 2;
	goto a;
	printf("not a");
	label a:
	printf("a");
	#printf("%d", toi32("123"));

	#printf("%d", negate(square(a)) * negate(square(a)));
}

# add relative operators
# finish the array accessor